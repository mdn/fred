name: PR review companion

on:
  push:
    branches:
      - review-companion

  workflow_call:
    secrets:
      GCP_PROJECT_NAME:
        required: true
      WIP_PROJECT_ID:
        required: true

permissions:
  # Download artifact.
  actions: read
  # Post comment in pull request.
  pull-requests: write
  # Authenticate with GCP.
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login != 'dependabot[bot]'
    env:
      BUILD_OUT_ROOT: ${{ github.workspace }}/build

    steps:
      - name: Checkout (fred)
        uses: actions/checkout@v4
        with:
          path: mdn/fred

      - name: Checkout (content)
        uses: actions/checkout@v4
        with:
          repository: mdn/content
          path: mdn/content

      - name: Checkout (translated-content)
        uses: actions/checkout@v4
        with:
          repository: mdn/translated-content
          path: mdn/translated-content

      - name: Checkout (curriculum)
        uses: actions/checkout@v4
        with:
          repository: mdn/curriculum
          path: mdn/curriculum

      - name: Checkout (generic-content)
        uses: actions/checkout@v4
        with:
          repository: mdn/generic-content
          path: mdn/generic-content

      - uses: actions/checkout@v4
        with:
          repository: mdn/mdn-contributor-spotlight
          path: mdn/mdn-contributor-spotlight

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: "mdn/fred/.nvmrc"

      - name: Build everything
        working-directory: mdn/fred
        env:
          CONTENT_ROOT: ${{ github.workspace }}/mdn/content/files
          CONTRIBUTOR_SPOTLIGHT_ROOT: ${{ github.workspace }}/mdn/mdn-contributor-spotlight/contributors
          #BLOG_ROOT: ${{ github.workspace }}/mdn/mdn-studio/content/posts
          CURRICULUM_ROOT: ${{ github.workspace }}/mdn/curriculum
          GENERIC_CONTENT_ROOT: ${{ github.workspace }}/mdn/generic-content/files

          # rari
          LIVE_SAMPLES_BASE_URL: https://live.test.mdnyalp.dev
          INTERACTIVE_EXAMPLES_BASE_URL: https://interactive-examples.mdn.allizom.net
          ADDITIONAL_LOCALES_FOR_GENERICS_AND_SPAS: de

          BUILD_LIVE_SAMPLES_BASE_URL: https://live.mdnyalp.dev
          BUILD_LEGACY_LIVE_SAMPLES_BASE_URL: https://live.mdnyalp.dev

          # Use the stage version of interactive examples.
          BUILD_INTERACTIVE_EXAMPLES_BASE_URL: https://interactive-examples.mdn.allizom.net

          # Now is not the time to worry about flaws.
          BUILD_FLAW_LEVELS: "*:ignore"

          # This adds the ability to sign in (stage only for now)
          REACT_APP_DISABLE_AUTH: true

          # Playground
          REACT_APP_PLAYGROUND_BASE_HOST: mdnyalp.dev
        run: |
          set -eo pipefail

          # Info about which CONTENT_* environment variables were set and to what.
          echo "CONTENT_ROOT=$CONTENT_ROOT"
          echo "BLOG_ROOT=$BLOG_ROOT"

          npm ci
          mkdir -p $BUILD_OUT_ROOT/static

          npm run rari git-history

          npm run rari build -- --spas --curriculum --generics --templ-stats

          # SSR all pages
          npm run build
          node build/ssr.js
          cp -r dist/* $BUILD_OUT_ROOT/static/

          cp ../../assets/nonprod/robots.txt $BUILD_OUT_ROOT/robots.txt

      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: ${{ env.BUILD_OUT_ROOT }}

  deploy:
    environment: review
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: "Download artifact"
        uses: actions/download-artifact@v4
        with:
          pattern: build
          path: build
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Check for artifacts
        id: check
        if: hashFiles('build/') != ''
        run: |
          echo "HAS_ARTIFACT=true" >> "$GITHUB_OUTPUT"
          PR_NUMBER=`cat build/NR | tr -dc '0-9'`
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_OUTPUT"
          echo "PREFIX=fred-$PR_NUMBER" >> "$GITHUB_OUTPUT"

      - name: Authenticate with GCP
        if: steps.check.outputs.HAS_ARTIFACT
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          service_account: deploy-mdn-review-content@${{ secrets.GCP_PROJECT_NAME }}.iam.gserviceaccount.com
          workload_identity_provider: projects/${{ secrets.WIP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions

      - name: Setup gcloud
        if: steps.check.outputs.HAS_ARTIFACT
        uses: google-github-actions/setup-gcloud@v2

      - name: Upload to GCS
        if: steps.check.outputs.HAS_ARTIFACT
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: "build"
          destination: "${{ vars.GCP_BUCKET_NAME }}/${{ steps.check.outputs.PREFIX }}"
          resumable: false
          concurrency: 500
          parent: false
          process_gcloudignore: false

      - name: Post message in PR
        if: steps.check.outputs.HAS_ARTIFACT
        run: |
          GH_USER=$(gh api user --jq '.login')
          COMMENT_ID=$(gh pr view "$PR_NUMBER" --repo "${{ github.repository }}" --comments --json comments \
            --jq ".comments | sort_by(.createdAt) | map(select(.author.login == \"$GH_USER\")) | .[0].id")

          if [ -n "$COMMENT_ID" ]; then
            gh api graphql -f query='
                mutation($id:ID!, $body:String!) {
                updateIssueComment(input:{id:$id, body:$body}) {
                    issueComment {
                        id
                    }
                }
            }' -f id="$COMMENT_ID" -f body="$BODY"
          else
            gh pr comment "$PR_NUMBER" --repo "${{ github.repository }}" --body "$BODY"
          fi
        env:
          BODY: "Review deployment: https://${{ steps.check.outputs.PREFIX }}.review.mdn.allizom.net/"
          PR_NUMBER: ${{ steps.check.outputs.PR_NUMBER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
